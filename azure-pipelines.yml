name: $(Date:yyyy.M.d)$(Rev:.r)
trigger:
  branches:
    include:
    - master

variables:
  MyConfiguration: Release
  MyPlatform: Any CPU
  WorkingDirectory: $(build.sourcesDirectory)
  APIName: DevOpsTechChallenge.API
  WebSiteName: DevOpsTechChallenge.Web
  APIDirectory: $(WorkingDirectory)\$(APIName)
  WebSiteDirectory: $(WorkingDirectory)\$(WebSiteName)
  terraformstorageaccount: jfh_dotc_terraform_store
  dotc_resourcegroupname: jfh_dotc_rg
  sqlservername: jfh_dotc_sql
  sqladminusername: dotcadmin
  sqladminpassword: dotc@dmin3445
  databasename: jfh_dotc_db
  appserviceplan: jfh_dotc_asp
  appservicenameapi: jfh_dotc_api_as
  appservicenameweb: jfh_dotc_web_as
    

pool:
  vmImage: 'windows-latest'

jobs:
- job: Build_API
  displayName: Build API
  steps:
  - powershell: .\build.ps1 --Version '$(Build.BuildNumber)' --Configuration '$(MyConfiguration)'
    displayName: Run Nuke Build
    workingDirectory: $(APIDirectory)
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      searchFolder: '$(APIDirectory)'
      failTaskOnFailedTests: true
      testRunTitle: 'API Build Tests'
      buildPlatform: '$(MyPlatform)'
      buildConfiguration: '$(MyConfiguration)'
  - task: PublishCodeCoverageResults@1
    displayName: Publish Coverage Results
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(APIDirectory)\**\in\**\coverage.cobertura.xml'
      pathToSources: '$(APIDirectory)'
  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifact
    inputs:
      targetPath: '$(APIDirectory)/$(APIName).zip'
      artifact: 'APIArtifact'

- job: Build_Web
  displayName: Build Web
  steps:
  - powershell: .\build.ps1 --Version '$(Build.BuildNumber)' --Configuration '$(MyConfiguration)'
    displayName: Run Nuke Build
    workingDirectory: $(WebSiteDirectory)
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      searchFolder: '$(WebSiteDirectory)'
      failTaskOnFailedTests: true
      testRunTitle: 'API Build Tests'
      buildPlatform: '$(MyPlatform)'
      buildConfiguration: '$(MyConfiguration)'
  - task: PublishCodeCoverageResults@1
    displayName: Publish Coverage Results
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(WebSiteDirectory)\**\in\**\coverage.cobertura.xml'
      pathToSources: '$(WebSiteDirectory)'
  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifact
    inputs:
      targetPath: '$(WebSiteDirectory)/$(WebSiteName).zip'
      artifact: 'WebSiteArtifact'
  - task: PublishPipelineArtifact@1
    displayName: Publish Terrform Artifact
    inputs:
      targetPath: '$(WorkingDirectory)/Infrastructure/*.tf'
      artifact: 'Terraform'
 